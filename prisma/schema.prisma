// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://Rukala:password@postgres:5432/median-db?schema=public"
}

model User {
  id        String   @id @default(uuid())
  login     String   @unique
  password  String
  version   Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Artist {
  id     String  @id @default(uuid())
  name   String
  grammy Boolean @default(false)

  albums Album[]
  tracks Track[]

  favorites   Favorites? @relation(fields: [favoritesId], references: [id])
  favoritesId String?
}

model Album {
  id   String @id @default(uuid())
  name String
  year Int

  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId String?

  tracks Track[]

  favorites   Favorites? @relation(fields: [favoritesId], references: [id])
  favoritesId String?
}

model Track {
  id       String @id @default(uuid())
  name     String
  duration Int

  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId String?

  album   Album?  @relation(fields: [albumId], references: [id], onDelete: SetNull)
  albumId String?

  favorites   Favorites? @relation(fields: [favoritesId], references: [id])
  favoritesId String?
}

model Favorites {
  id      String   @id @default(uuid())
  artists Artist[]
  albums  Album[]
  tracks  Track[]
}
